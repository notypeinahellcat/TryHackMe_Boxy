Wyzwania:
1. Kto otrzymał e-maila z załącznikiem o formacie PDF?
- Wszystkie e-maile zawierały ten sam plik o formacie .html, poza jednym wysłanym do pracownika William McClean.
Wystarczy sprawdzić co otrzymujemy w załącznikach każdego e-maila.

2. Jaki e-mail został użyty przez atakującego do wysyłania e-maili phishingowych?
- Należy wejść do któregokolwiek e-maila i sprawdzić nadawce.

( Accounts.Payable@groupmarketingonline.icu )

3. Jaki jest URL przekierowania ze strony phishingowej wysłanej do pracownika Zoe Duncan? (format defanged)
- Format defanged używany jest do bezpiecznego wysyłania i udostępniania złośliwych adresów URL. W boxie do tego mamy narzędzie CyberChef, który sam stripuje atrybuty linku, przez co staje sie nieklikalny. Niweluje to ryzyko przypadkowego kliknięcia.
Otwieramy w notatniku plik .html otrzymany w e-mailach. Kopiujemy adres przekierowania, zaznaczamy opcje URL Defang oraz wklejamy. Odpowiedzią będzie output, który wygeneruje nam strona.
( hxxp[://]kennaroads[.]buzz/data/Update365/office365/40e7baa2f826a57fcf04e5202526f8bd/?email=zoe[.]duncan@swiftspend[.]finance&error )

4. Jaki jest adres URL archiwum .zip całego zestawu phishingowego?
- Chodzi tutaj o całą zawartość strony, która wygląda jak strona logowania Microsoft.
Patrząc na link phishingowy widzimy, że istnieje subdomena /data.
Przechodzimy więc do hxxp[://]kennaroads[.]buzz/data/ poczym ukazuję się archiwum .zip z nazwą Update365.zip. To jest właśnie nasza odpowiedź.

( hxxp[://]kennaroads[.]buzz/data/Update365[.]zip )

5. Jaki jest hash SHA256 pliku .zip zestawu phishingowego?
- Pobieramy plik .zip z serwera na Virtual Machine serwisu po czym otwieramy terminal w folderze Downloads. Komenda sha256sum <nazwa pliku> pokaże nam sume SHA256.

( ba3c15267393419eb08c7b2652b8b6b39b406ef300ae8a18fee4d16b19ac9686 )

W tym etapie boxa autor pokazuje nam na prostych przykładach, jakie informacje możemy znależć na publicznych stronach, czyli tzw. OSINT.

6. Kiedy pierwszy raz plik .zip został przeskanowany? format(YYYY-MM-DD HH.MM.SS)
- Do tego zadania użyjemy serwisu VirusTotal. Po wklejeniu sumy SHA256 pliku .zip ukaże nam się pierwsza data skanowania w zakładce Details.

( 2020-04-08 21:55:50 UTC )

7. Kiedy poraz pierwszy certyfikat SSL domeny użytej do hostowania phishingu wykazał aktywność?
- Odpowiedź na to pytanie również znajdziemy na VirusTotal.

( 2020-06-25 )

8. Jaki adres e-mail przesłał swoje hasło podwójnie do serwera?
- Pod adresem hxxp[://]kennaroads[.]buzz/data/Update365[.]zip/ znajdziemy plik logs.txt zawierający logi przesłanych danych przez użytkowników strony phishingowej.
Studiując plik tekstowy widzimy podwójne wydarzenie zarejestrowania danych logowania przez adres michael.ascot@swiftspend.finance

( michael.ascot@swiftspend.finance )

9. Jaki adres e-mail używał atakujący, by zdobywać dane logowania ofiar?
- Wchodząc w funkcję "Zbadaj" w przeglądarce w zakładce Network jesteśmy w stanie widzieć, co dzieje się z API podczas poszczególnych akcji.
Wpisując jakiekolwiek hasło na stronie logowania widzimy request POST do pliku submit.php. Otwieramy plik w edytorze tekstu.
Studiując kod źródłowy widzimy e-mail do końcowego przesyłu.

( m3npat@yandex.com )

10. Atakujący używał również innego adresu .gmail do zbierania danych logowania. Jaki?
- Użyjemy komendy grep systemu Linux by najszybciej znaleźć słowo kluczowe @gmail.com w folderze pełnym plików.
Otwieramy terminal w folderze wypakowanym z archiwum .zip i postępujemy komendą: grep -r @gmail.com

( jamestanner2299@gmail.com )

11. Jaka jest ukryta flaga?
- Wskazówka do zadania mówi nam, że jest to plik .txt i znajdziemy go zmieniając URL phishingowy lub przeglądając cały folder plików.
Możemy pobawić się z URL'em, co zaowocuje dotarciem do adresu kennaroads[.]buzz/data/Update365/office365/flag[.]txt
W srodku znajdziemy znaki zakodowane w Base64. Zapiszemy go w pliku szyfr.txt na pulpicie.
Otwierając terminal na pulpicie z komendą base64 -d szyfr.txt > odszyfrowane.txt automatycznie odszyfrujemy ciąg znaków.
Teraz mamy odpowiedź ostateczną, ale odwróconą. Komendą rev odszyfrowane.txt odwrócimy znaki.
To jest nasza odpowiedź.

( THM{pL4y_w1Th_tH3_URL} )

